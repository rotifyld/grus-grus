fun plus(x: Int, y: Int) -> Int {
    x + y    
}

// partial aplication
val plusOne: Int -> Int = plus(1);

// higher-order function
fun compose(f: Int -> Int, g: Int -> Int) -> Int -> Int {

    // closure
    fun fg(x: Int) -> Int {
        f(g(x))
    }

    fg
}

// anonymous function
compose(plusOne, (\x: Int ~> x * 4))(1)